datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String   @id @default(cuid())
  name           String?  
  email          String?  @unique
  emailVerified  DateTime?
  image          String?
  password       String?  // hashed password
  accounts       Account[]
  sessions       Session[]
  forms          Form[]
  @@map("users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

// Form Builder Models
model Form {
  id              String    @id @default(cuid())
  title           String
  description     String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  publishedAt     DateTime?
  userId          String
  teamId          String?
  projectId       String?
  fields          Json      // Array of field configurations
  settings        Json?     // Form settings like submission behavior
  linearSettings  Json?     // Linear integration settings
  submissions     FormSubmission[]
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("forms")
}

model FormSubmission {
  id              String    @id @default(cuid())
  formId          String
  data            Json      // Submitted form data
  metadata        Json?     // Browser info, timestamps, etc.
  createdAt       DateTime  @default(now())
  linearIssueId   String?   // ID of created Linear issue if applicable
  form            Form      @relation(fields: [formId], references: [id], onDelete: Cascade)
  
  @@map("form_submissions")
} 